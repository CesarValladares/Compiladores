
# Compilador_Calc_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSMORETHANLESSTHANMOREOREQUALLESSOREQUALSAMEleftTIMESDIVIDEleftEXPLPARENrightUMINUSCHAR COMMA COMMENT DIVIDE ELSE EQUALS EXP FACTORIAL FLOAT FOR FORFUNC FUNCTION ID IF LBRACKET LESSOREQUAL LESSTHAN LKEY LPAREN MINUS MOREOREQUAL MORETHAN NUMBER PLUS PRINT RBRACKET RKEY RPAREN SAME SEMICOLON SQUARE STRING THEN TIMES WHILEstatement : ID EQUALS expressionstatement : PRINT expressionstatement : ID EQUALS LBRACKET statement RBRACKET\n                    | statement COMMA NUMBER\n                    | NUMBER statement : expressionstatement : ID LPAREN datafunc RPARENdatafunc : ID\n                    | ID COMMA datafunc\n        expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXP expression\n        expression : MINUS expression %prec UMINUSexpression : ID LBRACKET NUMBER RBRACKETexpression : NUMBERexpression : STRINGexpression : ID'
    
_lr_action_items = {'ID':([0,4,6,9,11,12,13,14,15,16,23,34,],[2,18,18,18,25,18,18,18,18,18,2,25,]),'PRINT':([0,23,],[4,4,]),'NUMBER':([0,4,6,8,9,10,12,13,14,15,16,23,],[5,19,19,21,19,24,19,19,19,19,19,5,]),'MINUS':([0,2,3,4,5,6,7,9,12,13,14,15,16,17,18,19,20,22,23,27,28,29,30,31,33,],[6,-19,13,6,-17,6,-18,6,6,6,6,6,6,13,-19,-17,-15,13,6,-10,-11,-12,-13,-14,-16,]),'STRING':([0,4,6,9,12,13,14,15,16,23,],[7,7,7,7,7,7,7,7,7,7,]),'$end':([1,2,3,5,7,17,18,19,20,21,22,27,28,29,30,31,33,35,36,],[0,-19,-6,-5,-18,-2,-19,-17,-15,-4,-1,-10,-11,-12,-13,-14,-16,-7,-3,]),'COMMA':([1,2,3,5,7,17,18,19,20,21,22,25,27,28,29,30,31,32,33,35,36,],[8,-19,-6,-5,-18,-2,-19,-17,-15,-4,-1,34,-10,-11,-12,-13,-14,8,-16,-7,-3,]),'EQUALS':([2,],[9,]),'LPAREN':([2,],[11,]),'LBRACKET':([2,9,18,],[10,23,10,]),'PLUS':([2,3,5,7,17,18,19,20,22,27,28,29,30,31,33,],[-19,12,-17,-18,12,-19,-17,-15,12,-10,-11,-12,-13,-14,-16,]),'TIMES':([2,3,5,7,17,18,19,20,22,27,28,29,30,31,33,],[-19,14,-17,-18,14,-19,-17,-15,14,14,14,-12,-13,-14,-16,]),'DIVIDE':([2,3,5,7,17,18,19,20,22,27,28,29,30,31,33,],[-19,15,-17,-18,15,-19,-17,-15,15,15,15,-12,-13,-14,-16,]),'EXP':([2,3,5,7,17,18,19,20,22,27,28,29,30,31,33,],[-19,16,-17,-18,16,-19,-17,-15,16,16,16,16,16,-14,-16,]),'RBRACKET':([2,3,5,7,17,18,19,20,21,22,24,27,28,29,30,31,32,33,35,36,],[-19,-6,-5,-18,-2,-19,-17,-15,-4,-1,33,-10,-11,-12,-13,-14,36,-16,-7,-3,]),'RPAREN':([25,26,37,],[-8,35,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,23,],[1,32,]),'expression':([0,4,6,9,12,13,14,15,16,23,],[3,17,20,22,27,28,29,30,31,3,]),'datafunc':([11,34,],[26,37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> ID EQUALS expression','statement',3,'p_statement_assign','Compilador.py',408),
  ('statement -> PRINT expression','statement',2,'p_statement_print','Compilador.py',414),
  ('statement -> ID EQUALS LBRACKET statement RBRACKET','statement',5,'p_statement_list','Compilador.py',419),
  ('statement -> statement COMMA NUMBER','statement',3,'p_statement_list','Compilador.py',420),
  ('statement -> NUMBER','statement',1,'p_statement_list','Compilador.py',421),
  ('statement -> expression','statement',1,'p_statement_expr','Compilador.py',433),
  ('statement -> ID LPAREN datafunc RPAREN','statement',4,'p_statement_call_func','Compilador.py',437),
  ('datafunc -> ID','datafunc',1,'p_expression_func_data','Compilador.py',442),
  ('datafunc -> ID COMMA datafunc','datafunc',3,'p_expression_func_data','Compilador.py',443),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','Compilador.py',450),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','Compilador.py',451),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','Compilador.py',452),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','Compilador.py',453),
  ('expression -> expression EXP expression','expression',3,'p_expression_binop','Compilador.py',454),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Compilador.py',474),
  ('expression -> ID LBRACKET NUMBER RBRACKET','expression',4,'p_expression_data_in_array','Compilador.py',478),
  ('expression -> NUMBER','expression',1,'p_expression_number','Compilador.py',494),
  ('expression -> STRING','expression',1,'p_expression_string','Compilador.py',498),
  ('expression -> ID','expression',1,'p_expression_ID','Compilador.py',502),
]
